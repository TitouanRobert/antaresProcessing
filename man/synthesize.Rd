% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/synthesize.R
\name{synthesize}
\alias{synthesize}
\title{Synthesize Monte-Carlo scenarios}
\usage{
synthesize(x, ...)
}
\arguments{
\item{x}{an object of class \code{antaresData} created with
\code{\link[antaresRead]{readAntares}} and containing detailed results of
an Antares simulation.}

\item{...}{Additional parameters indicating which additional statistics to produce.
See details to see how to specify them.}
}
\value{
Synthetic version of the input data. It has the same structure as \code{x}
except that column \code{mcYear} has been removed. All variables are
averaged across Monte-Carlo scenarios and eventually some additional columns
have been added corresponding to the requested custom statistics.
}
\description{
This function takes as input an object of class \code{antaresData} containing
detailed results of a simulation and creates a synthesis of the results.
The synthesis contains the average value of each variable over Monte-Carlo
scenarios and eventually other aggregated statistics
}
\details{
Additional statistics can be asked in three different ways:

\enumerate{
  \item A character string in "min", "max", "std", or "median". It will add
    for each column respectively the minimum or maximum value, the standard
    deviation or the median of the variable.

  \item A named argument whose value is a function. For instance
    \code{med = median} will calculate the median of each variable. The name
    of the resulting column will be prefixed by "med_".

  \item A named argument whose value is a list. It has to contain an element
  \code{fun} equal to a function and optionally an element \code{only}
  containing the names of the columns to which to apply the function.
  For instance \code{med = list(fun = median, only = c("LOAD", "MRG. PRICE"))}
  will compute the median of variables "LOAD" and "MRG. PRICE". The result
  will be stored in columns "med_LOAD" and "med_MRG. PRICE".
}

The computation of custom statistics can take some time, especially with hourly
data. To improve performance, prefer the third form and compute custom
statistics only on a few variables.
}
\examples{
\dontrun{
mydata <- readAntares("all", timeStep = "annual", synthesis = FALSE)

synthesize(mydata)

# Add minimum and maximum for all variables
synthesize(mydata, "min", "max")

# Compute a custom statistic for all columns
synthesize(mydata, log = function(x) mean(log(x)))

# Compute 95\% confidence interval for the marginal price
synthesize(mydata,
           l = list(fun = function(x) quantile(x, 0.025), only = "MRG. PRICE"),
           u = list(fun = function(x) quantile(x, 0.975), only = "MRG. PRICE"))
}

}

